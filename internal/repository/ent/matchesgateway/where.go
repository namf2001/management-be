// Code generated by ent, DO NOT EDIT.

package matchesgateway

import (
	"management-be/internal/repository/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldLTE(FieldID, id))
}

// CompetitionName applies equality check predicate on the "competition_name" field. It's identical to CompetitionNameEQ.
func CompetitionName(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldEQ(FieldCompetitionName, v))
}

// SeasonStartDate applies equality check predicate on the "season_start_date" field. It's identical to SeasonStartDateEQ.
func SeasonStartDate(v time.Time) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldEQ(FieldSeasonStartDate, v))
}

// MatchDate applies equality check predicate on the "match_date" field. It's identical to MatchDateEQ.
func MatchDate(v time.Time) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldEQ(FieldMatchDate, v))
}

// HomeTeamName applies equality check predicate on the "home_team_name" field. It's identical to HomeTeamNameEQ.
func HomeTeamName(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldEQ(FieldHomeTeamName, v))
}

// HomeTeamShortName applies equality check predicate on the "home_team_short_name" field. It's identical to HomeTeamShortNameEQ.
func HomeTeamShortName(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldEQ(FieldHomeTeamShortName, v))
}

// HomeTeamLogo applies equality check predicate on the "home_team_logo" field. It's identical to HomeTeamLogoEQ.
func HomeTeamLogo(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldEQ(FieldHomeTeamLogo, v))
}

// AwayTeamName applies equality check predicate on the "away_team_name" field. It's identical to AwayTeamNameEQ.
func AwayTeamName(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldEQ(FieldAwayTeamName, v))
}

// AwayTeamShortName applies equality check predicate on the "away_team_short_name" field. It's identical to AwayTeamShortNameEQ.
func AwayTeamShortName(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldEQ(FieldAwayTeamShortName, v))
}

// AwayTeamLogo applies equality check predicate on the "away_team_logo" field. It's identical to AwayTeamLogoEQ.
func AwayTeamLogo(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldEQ(FieldAwayTeamLogo, v))
}

// HomeScore applies equality check predicate on the "home_score" field. It's identical to HomeScoreEQ.
func HomeScore(v int32) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldEQ(FieldHomeScore, v))
}

// AwayScore applies equality check predicate on the "away_score" field. It's identical to AwayScoreEQ.
func AwayScore(v int32) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldEQ(FieldAwayScore, v))
}

// Status applies equality check predicate on the "status" field. It's identical to StatusEQ.
func Status(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldEQ(FieldStatus, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldEQ(FieldUpdatedAt, v))
}

// DeletedAt applies equality check predicate on the "deleted_at" field. It's identical to DeletedAtEQ.
func DeletedAt(v time.Time) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldEQ(FieldDeletedAt, v))
}

// CompetitionNameEQ applies the EQ predicate on the "competition_name" field.
func CompetitionNameEQ(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldEQ(FieldCompetitionName, v))
}

// CompetitionNameNEQ applies the NEQ predicate on the "competition_name" field.
func CompetitionNameNEQ(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldNEQ(FieldCompetitionName, v))
}

// CompetitionNameIn applies the In predicate on the "competition_name" field.
func CompetitionNameIn(vs ...string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldIn(FieldCompetitionName, vs...))
}

// CompetitionNameNotIn applies the NotIn predicate on the "competition_name" field.
func CompetitionNameNotIn(vs ...string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldNotIn(FieldCompetitionName, vs...))
}

// CompetitionNameGT applies the GT predicate on the "competition_name" field.
func CompetitionNameGT(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldGT(FieldCompetitionName, v))
}

// CompetitionNameGTE applies the GTE predicate on the "competition_name" field.
func CompetitionNameGTE(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldGTE(FieldCompetitionName, v))
}

// CompetitionNameLT applies the LT predicate on the "competition_name" field.
func CompetitionNameLT(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldLT(FieldCompetitionName, v))
}

// CompetitionNameLTE applies the LTE predicate on the "competition_name" field.
func CompetitionNameLTE(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldLTE(FieldCompetitionName, v))
}

// CompetitionNameContains applies the Contains predicate on the "competition_name" field.
func CompetitionNameContains(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldContains(FieldCompetitionName, v))
}

// CompetitionNameHasPrefix applies the HasPrefix predicate on the "competition_name" field.
func CompetitionNameHasPrefix(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldHasPrefix(FieldCompetitionName, v))
}

// CompetitionNameHasSuffix applies the HasSuffix predicate on the "competition_name" field.
func CompetitionNameHasSuffix(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldHasSuffix(FieldCompetitionName, v))
}

// CompetitionNameEqualFold applies the EqualFold predicate on the "competition_name" field.
func CompetitionNameEqualFold(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldEqualFold(FieldCompetitionName, v))
}

// CompetitionNameContainsFold applies the ContainsFold predicate on the "competition_name" field.
func CompetitionNameContainsFold(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldContainsFold(FieldCompetitionName, v))
}

// SeasonStartDateEQ applies the EQ predicate on the "season_start_date" field.
func SeasonStartDateEQ(v time.Time) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldEQ(FieldSeasonStartDate, v))
}

// SeasonStartDateNEQ applies the NEQ predicate on the "season_start_date" field.
func SeasonStartDateNEQ(v time.Time) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldNEQ(FieldSeasonStartDate, v))
}

// SeasonStartDateIn applies the In predicate on the "season_start_date" field.
func SeasonStartDateIn(vs ...time.Time) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldIn(FieldSeasonStartDate, vs...))
}

// SeasonStartDateNotIn applies the NotIn predicate on the "season_start_date" field.
func SeasonStartDateNotIn(vs ...time.Time) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldNotIn(FieldSeasonStartDate, vs...))
}

// SeasonStartDateGT applies the GT predicate on the "season_start_date" field.
func SeasonStartDateGT(v time.Time) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldGT(FieldSeasonStartDate, v))
}

// SeasonStartDateGTE applies the GTE predicate on the "season_start_date" field.
func SeasonStartDateGTE(v time.Time) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldGTE(FieldSeasonStartDate, v))
}

// SeasonStartDateLT applies the LT predicate on the "season_start_date" field.
func SeasonStartDateLT(v time.Time) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldLT(FieldSeasonStartDate, v))
}

// SeasonStartDateLTE applies the LTE predicate on the "season_start_date" field.
func SeasonStartDateLTE(v time.Time) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldLTE(FieldSeasonStartDate, v))
}

// MatchDateEQ applies the EQ predicate on the "match_date" field.
func MatchDateEQ(v time.Time) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldEQ(FieldMatchDate, v))
}

// MatchDateNEQ applies the NEQ predicate on the "match_date" field.
func MatchDateNEQ(v time.Time) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldNEQ(FieldMatchDate, v))
}

// MatchDateIn applies the In predicate on the "match_date" field.
func MatchDateIn(vs ...time.Time) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldIn(FieldMatchDate, vs...))
}

// MatchDateNotIn applies the NotIn predicate on the "match_date" field.
func MatchDateNotIn(vs ...time.Time) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldNotIn(FieldMatchDate, vs...))
}

// MatchDateGT applies the GT predicate on the "match_date" field.
func MatchDateGT(v time.Time) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldGT(FieldMatchDate, v))
}

// MatchDateGTE applies the GTE predicate on the "match_date" field.
func MatchDateGTE(v time.Time) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldGTE(FieldMatchDate, v))
}

// MatchDateLT applies the LT predicate on the "match_date" field.
func MatchDateLT(v time.Time) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldLT(FieldMatchDate, v))
}

// MatchDateLTE applies the LTE predicate on the "match_date" field.
func MatchDateLTE(v time.Time) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldLTE(FieldMatchDate, v))
}

// HomeTeamNameEQ applies the EQ predicate on the "home_team_name" field.
func HomeTeamNameEQ(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldEQ(FieldHomeTeamName, v))
}

// HomeTeamNameNEQ applies the NEQ predicate on the "home_team_name" field.
func HomeTeamNameNEQ(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldNEQ(FieldHomeTeamName, v))
}

// HomeTeamNameIn applies the In predicate on the "home_team_name" field.
func HomeTeamNameIn(vs ...string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldIn(FieldHomeTeamName, vs...))
}

// HomeTeamNameNotIn applies the NotIn predicate on the "home_team_name" field.
func HomeTeamNameNotIn(vs ...string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldNotIn(FieldHomeTeamName, vs...))
}

// HomeTeamNameGT applies the GT predicate on the "home_team_name" field.
func HomeTeamNameGT(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldGT(FieldHomeTeamName, v))
}

// HomeTeamNameGTE applies the GTE predicate on the "home_team_name" field.
func HomeTeamNameGTE(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldGTE(FieldHomeTeamName, v))
}

// HomeTeamNameLT applies the LT predicate on the "home_team_name" field.
func HomeTeamNameLT(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldLT(FieldHomeTeamName, v))
}

// HomeTeamNameLTE applies the LTE predicate on the "home_team_name" field.
func HomeTeamNameLTE(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldLTE(FieldHomeTeamName, v))
}

// HomeTeamNameContains applies the Contains predicate on the "home_team_name" field.
func HomeTeamNameContains(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldContains(FieldHomeTeamName, v))
}

// HomeTeamNameHasPrefix applies the HasPrefix predicate on the "home_team_name" field.
func HomeTeamNameHasPrefix(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldHasPrefix(FieldHomeTeamName, v))
}

// HomeTeamNameHasSuffix applies the HasSuffix predicate on the "home_team_name" field.
func HomeTeamNameHasSuffix(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldHasSuffix(FieldHomeTeamName, v))
}

// HomeTeamNameEqualFold applies the EqualFold predicate on the "home_team_name" field.
func HomeTeamNameEqualFold(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldEqualFold(FieldHomeTeamName, v))
}

// HomeTeamNameContainsFold applies the ContainsFold predicate on the "home_team_name" field.
func HomeTeamNameContainsFold(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldContainsFold(FieldHomeTeamName, v))
}

// HomeTeamShortNameEQ applies the EQ predicate on the "home_team_short_name" field.
func HomeTeamShortNameEQ(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldEQ(FieldHomeTeamShortName, v))
}

// HomeTeamShortNameNEQ applies the NEQ predicate on the "home_team_short_name" field.
func HomeTeamShortNameNEQ(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldNEQ(FieldHomeTeamShortName, v))
}

// HomeTeamShortNameIn applies the In predicate on the "home_team_short_name" field.
func HomeTeamShortNameIn(vs ...string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldIn(FieldHomeTeamShortName, vs...))
}

// HomeTeamShortNameNotIn applies the NotIn predicate on the "home_team_short_name" field.
func HomeTeamShortNameNotIn(vs ...string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldNotIn(FieldHomeTeamShortName, vs...))
}

// HomeTeamShortNameGT applies the GT predicate on the "home_team_short_name" field.
func HomeTeamShortNameGT(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldGT(FieldHomeTeamShortName, v))
}

// HomeTeamShortNameGTE applies the GTE predicate on the "home_team_short_name" field.
func HomeTeamShortNameGTE(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldGTE(FieldHomeTeamShortName, v))
}

// HomeTeamShortNameLT applies the LT predicate on the "home_team_short_name" field.
func HomeTeamShortNameLT(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldLT(FieldHomeTeamShortName, v))
}

// HomeTeamShortNameLTE applies the LTE predicate on the "home_team_short_name" field.
func HomeTeamShortNameLTE(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldLTE(FieldHomeTeamShortName, v))
}

// HomeTeamShortNameContains applies the Contains predicate on the "home_team_short_name" field.
func HomeTeamShortNameContains(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldContains(FieldHomeTeamShortName, v))
}

// HomeTeamShortNameHasPrefix applies the HasPrefix predicate on the "home_team_short_name" field.
func HomeTeamShortNameHasPrefix(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldHasPrefix(FieldHomeTeamShortName, v))
}

// HomeTeamShortNameHasSuffix applies the HasSuffix predicate on the "home_team_short_name" field.
func HomeTeamShortNameHasSuffix(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldHasSuffix(FieldHomeTeamShortName, v))
}

// HomeTeamShortNameEqualFold applies the EqualFold predicate on the "home_team_short_name" field.
func HomeTeamShortNameEqualFold(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldEqualFold(FieldHomeTeamShortName, v))
}

// HomeTeamShortNameContainsFold applies the ContainsFold predicate on the "home_team_short_name" field.
func HomeTeamShortNameContainsFold(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldContainsFold(FieldHomeTeamShortName, v))
}

// HomeTeamLogoEQ applies the EQ predicate on the "home_team_logo" field.
func HomeTeamLogoEQ(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldEQ(FieldHomeTeamLogo, v))
}

// HomeTeamLogoNEQ applies the NEQ predicate on the "home_team_logo" field.
func HomeTeamLogoNEQ(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldNEQ(FieldHomeTeamLogo, v))
}

// HomeTeamLogoIn applies the In predicate on the "home_team_logo" field.
func HomeTeamLogoIn(vs ...string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldIn(FieldHomeTeamLogo, vs...))
}

// HomeTeamLogoNotIn applies the NotIn predicate on the "home_team_logo" field.
func HomeTeamLogoNotIn(vs ...string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldNotIn(FieldHomeTeamLogo, vs...))
}

// HomeTeamLogoGT applies the GT predicate on the "home_team_logo" field.
func HomeTeamLogoGT(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldGT(FieldHomeTeamLogo, v))
}

// HomeTeamLogoGTE applies the GTE predicate on the "home_team_logo" field.
func HomeTeamLogoGTE(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldGTE(FieldHomeTeamLogo, v))
}

// HomeTeamLogoLT applies the LT predicate on the "home_team_logo" field.
func HomeTeamLogoLT(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldLT(FieldHomeTeamLogo, v))
}

// HomeTeamLogoLTE applies the LTE predicate on the "home_team_logo" field.
func HomeTeamLogoLTE(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldLTE(FieldHomeTeamLogo, v))
}

// HomeTeamLogoContains applies the Contains predicate on the "home_team_logo" field.
func HomeTeamLogoContains(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldContains(FieldHomeTeamLogo, v))
}

// HomeTeamLogoHasPrefix applies the HasPrefix predicate on the "home_team_logo" field.
func HomeTeamLogoHasPrefix(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldHasPrefix(FieldHomeTeamLogo, v))
}

// HomeTeamLogoHasSuffix applies the HasSuffix predicate on the "home_team_logo" field.
func HomeTeamLogoHasSuffix(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldHasSuffix(FieldHomeTeamLogo, v))
}

// HomeTeamLogoEqualFold applies the EqualFold predicate on the "home_team_logo" field.
func HomeTeamLogoEqualFold(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldEqualFold(FieldHomeTeamLogo, v))
}

// HomeTeamLogoContainsFold applies the ContainsFold predicate on the "home_team_logo" field.
func HomeTeamLogoContainsFold(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldContainsFold(FieldHomeTeamLogo, v))
}

// AwayTeamNameEQ applies the EQ predicate on the "away_team_name" field.
func AwayTeamNameEQ(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldEQ(FieldAwayTeamName, v))
}

// AwayTeamNameNEQ applies the NEQ predicate on the "away_team_name" field.
func AwayTeamNameNEQ(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldNEQ(FieldAwayTeamName, v))
}

// AwayTeamNameIn applies the In predicate on the "away_team_name" field.
func AwayTeamNameIn(vs ...string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldIn(FieldAwayTeamName, vs...))
}

// AwayTeamNameNotIn applies the NotIn predicate on the "away_team_name" field.
func AwayTeamNameNotIn(vs ...string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldNotIn(FieldAwayTeamName, vs...))
}

// AwayTeamNameGT applies the GT predicate on the "away_team_name" field.
func AwayTeamNameGT(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldGT(FieldAwayTeamName, v))
}

// AwayTeamNameGTE applies the GTE predicate on the "away_team_name" field.
func AwayTeamNameGTE(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldGTE(FieldAwayTeamName, v))
}

// AwayTeamNameLT applies the LT predicate on the "away_team_name" field.
func AwayTeamNameLT(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldLT(FieldAwayTeamName, v))
}

// AwayTeamNameLTE applies the LTE predicate on the "away_team_name" field.
func AwayTeamNameLTE(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldLTE(FieldAwayTeamName, v))
}

// AwayTeamNameContains applies the Contains predicate on the "away_team_name" field.
func AwayTeamNameContains(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldContains(FieldAwayTeamName, v))
}

// AwayTeamNameHasPrefix applies the HasPrefix predicate on the "away_team_name" field.
func AwayTeamNameHasPrefix(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldHasPrefix(FieldAwayTeamName, v))
}

// AwayTeamNameHasSuffix applies the HasSuffix predicate on the "away_team_name" field.
func AwayTeamNameHasSuffix(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldHasSuffix(FieldAwayTeamName, v))
}

// AwayTeamNameEqualFold applies the EqualFold predicate on the "away_team_name" field.
func AwayTeamNameEqualFold(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldEqualFold(FieldAwayTeamName, v))
}

// AwayTeamNameContainsFold applies the ContainsFold predicate on the "away_team_name" field.
func AwayTeamNameContainsFold(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldContainsFold(FieldAwayTeamName, v))
}

// AwayTeamShortNameEQ applies the EQ predicate on the "away_team_short_name" field.
func AwayTeamShortNameEQ(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldEQ(FieldAwayTeamShortName, v))
}

// AwayTeamShortNameNEQ applies the NEQ predicate on the "away_team_short_name" field.
func AwayTeamShortNameNEQ(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldNEQ(FieldAwayTeamShortName, v))
}

// AwayTeamShortNameIn applies the In predicate on the "away_team_short_name" field.
func AwayTeamShortNameIn(vs ...string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldIn(FieldAwayTeamShortName, vs...))
}

// AwayTeamShortNameNotIn applies the NotIn predicate on the "away_team_short_name" field.
func AwayTeamShortNameNotIn(vs ...string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldNotIn(FieldAwayTeamShortName, vs...))
}

// AwayTeamShortNameGT applies the GT predicate on the "away_team_short_name" field.
func AwayTeamShortNameGT(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldGT(FieldAwayTeamShortName, v))
}

// AwayTeamShortNameGTE applies the GTE predicate on the "away_team_short_name" field.
func AwayTeamShortNameGTE(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldGTE(FieldAwayTeamShortName, v))
}

// AwayTeamShortNameLT applies the LT predicate on the "away_team_short_name" field.
func AwayTeamShortNameLT(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldLT(FieldAwayTeamShortName, v))
}

// AwayTeamShortNameLTE applies the LTE predicate on the "away_team_short_name" field.
func AwayTeamShortNameLTE(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldLTE(FieldAwayTeamShortName, v))
}

// AwayTeamShortNameContains applies the Contains predicate on the "away_team_short_name" field.
func AwayTeamShortNameContains(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldContains(FieldAwayTeamShortName, v))
}

// AwayTeamShortNameHasPrefix applies the HasPrefix predicate on the "away_team_short_name" field.
func AwayTeamShortNameHasPrefix(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldHasPrefix(FieldAwayTeamShortName, v))
}

// AwayTeamShortNameHasSuffix applies the HasSuffix predicate on the "away_team_short_name" field.
func AwayTeamShortNameHasSuffix(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldHasSuffix(FieldAwayTeamShortName, v))
}

// AwayTeamShortNameEqualFold applies the EqualFold predicate on the "away_team_short_name" field.
func AwayTeamShortNameEqualFold(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldEqualFold(FieldAwayTeamShortName, v))
}

// AwayTeamShortNameContainsFold applies the ContainsFold predicate on the "away_team_short_name" field.
func AwayTeamShortNameContainsFold(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldContainsFold(FieldAwayTeamShortName, v))
}

// AwayTeamLogoEQ applies the EQ predicate on the "away_team_logo" field.
func AwayTeamLogoEQ(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldEQ(FieldAwayTeamLogo, v))
}

// AwayTeamLogoNEQ applies the NEQ predicate on the "away_team_logo" field.
func AwayTeamLogoNEQ(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldNEQ(FieldAwayTeamLogo, v))
}

// AwayTeamLogoIn applies the In predicate on the "away_team_logo" field.
func AwayTeamLogoIn(vs ...string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldIn(FieldAwayTeamLogo, vs...))
}

// AwayTeamLogoNotIn applies the NotIn predicate on the "away_team_logo" field.
func AwayTeamLogoNotIn(vs ...string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldNotIn(FieldAwayTeamLogo, vs...))
}

// AwayTeamLogoGT applies the GT predicate on the "away_team_logo" field.
func AwayTeamLogoGT(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldGT(FieldAwayTeamLogo, v))
}

// AwayTeamLogoGTE applies the GTE predicate on the "away_team_logo" field.
func AwayTeamLogoGTE(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldGTE(FieldAwayTeamLogo, v))
}

// AwayTeamLogoLT applies the LT predicate on the "away_team_logo" field.
func AwayTeamLogoLT(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldLT(FieldAwayTeamLogo, v))
}

// AwayTeamLogoLTE applies the LTE predicate on the "away_team_logo" field.
func AwayTeamLogoLTE(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldLTE(FieldAwayTeamLogo, v))
}

// AwayTeamLogoContains applies the Contains predicate on the "away_team_logo" field.
func AwayTeamLogoContains(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldContains(FieldAwayTeamLogo, v))
}

// AwayTeamLogoHasPrefix applies the HasPrefix predicate on the "away_team_logo" field.
func AwayTeamLogoHasPrefix(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldHasPrefix(FieldAwayTeamLogo, v))
}

// AwayTeamLogoHasSuffix applies the HasSuffix predicate on the "away_team_logo" field.
func AwayTeamLogoHasSuffix(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldHasSuffix(FieldAwayTeamLogo, v))
}

// AwayTeamLogoEqualFold applies the EqualFold predicate on the "away_team_logo" field.
func AwayTeamLogoEqualFold(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldEqualFold(FieldAwayTeamLogo, v))
}

// AwayTeamLogoContainsFold applies the ContainsFold predicate on the "away_team_logo" field.
func AwayTeamLogoContainsFold(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldContainsFold(FieldAwayTeamLogo, v))
}

// HomeScoreEQ applies the EQ predicate on the "home_score" field.
func HomeScoreEQ(v int32) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldEQ(FieldHomeScore, v))
}

// HomeScoreNEQ applies the NEQ predicate on the "home_score" field.
func HomeScoreNEQ(v int32) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldNEQ(FieldHomeScore, v))
}

// HomeScoreIn applies the In predicate on the "home_score" field.
func HomeScoreIn(vs ...int32) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldIn(FieldHomeScore, vs...))
}

// HomeScoreNotIn applies the NotIn predicate on the "home_score" field.
func HomeScoreNotIn(vs ...int32) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldNotIn(FieldHomeScore, vs...))
}

// HomeScoreGT applies the GT predicate on the "home_score" field.
func HomeScoreGT(v int32) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldGT(FieldHomeScore, v))
}

// HomeScoreGTE applies the GTE predicate on the "home_score" field.
func HomeScoreGTE(v int32) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldGTE(FieldHomeScore, v))
}

// HomeScoreLT applies the LT predicate on the "home_score" field.
func HomeScoreLT(v int32) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldLT(FieldHomeScore, v))
}

// HomeScoreLTE applies the LTE predicate on the "home_score" field.
func HomeScoreLTE(v int32) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldLTE(FieldHomeScore, v))
}

// HomeScoreIsNil applies the IsNil predicate on the "home_score" field.
func HomeScoreIsNil() predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldIsNull(FieldHomeScore))
}

// HomeScoreNotNil applies the NotNil predicate on the "home_score" field.
func HomeScoreNotNil() predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldNotNull(FieldHomeScore))
}

// AwayScoreEQ applies the EQ predicate on the "away_score" field.
func AwayScoreEQ(v int32) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldEQ(FieldAwayScore, v))
}

// AwayScoreNEQ applies the NEQ predicate on the "away_score" field.
func AwayScoreNEQ(v int32) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldNEQ(FieldAwayScore, v))
}

// AwayScoreIn applies the In predicate on the "away_score" field.
func AwayScoreIn(vs ...int32) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldIn(FieldAwayScore, vs...))
}

// AwayScoreNotIn applies the NotIn predicate on the "away_score" field.
func AwayScoreNotIn(vs ...int32) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldNotIn(FieldAwayScore, vs...))
}

// AwayScoreGT applies the GT predicate on the "away_score" field.
func AwayScoreGT(v int32) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldGT(FieldAwayScore, v))
}

// AwayScoreGTE applies the GTE predicate on the "away_score" field.
func AwayScoreGTE(v int32) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldGTE(FieldAwayScore, v))
}

// AwayScoreLT applies the LT predicate on the "away_score" field.
func AwayScoreLT(v int32) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldLT(FieldAwayScore, v))
}

// AwayScoreLTE applies the LTE predicate on the "away_score" field.
func AwayScoreLTE(v int32) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldLTE(FieldAwayScore, v))
}

// AwayScoreIsNil applies the IsNil predicate on the "away_score" field.
func AwayScoreIsNil() predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldIsNull(FieldAwayScore))
}

// AwayScoreNotNil applies the NotNil predicate on the "away_score" field.
func AwayScoreNotNil() predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldNotNull(FieldAwayScore))
}

// StatusEQ applies the EQ predicate on the "status" field.
func StatusEQ(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldEQ(FieldStatus, v))
}

// StatusNEQ applies the NEQ predicate on the "status" field.
func StatusNEQ(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldNEQ(FieldStatus, v))
}

// StatusIn applies the In predicate on the "status" field.
func StatusIn(vs ...string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldIn(FieldStatus, vs...))
}

// StatusNotIn applies the NotIn predicate on the "status" field.
func StatusNotIn(vs ...string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldNotIn(FieldStatus, vs...))
}

// StatusGT applies the GT predicate on the "status" field.
func StatusGT(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldGT(FieldStatus, v))
}

// StatusGTE applies the GTE predicate on the "status" field.
func StatusGTE(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldGTE(FieldStatus, v))
}

// StatusLT applies the LT predicate on the "status" field.
func StatusLT(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldLT(FieldStatus, v))
}

// StatusLTE applies the LTE predicate on the "status" field.
func StatusLTE(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldLTE(FieldStatus, v))
}

// StatusContains applies the Contains predicate on the "status" field.
func StatusContains(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldContains(FieldStatus, v))
}

// StatusHasPrefix applies the HasPrefix predicate on the "status" field.
func StatusHasPrefix(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldHasPrefix(FieldStatus, v))
}

// StatusHasSuffix applies the HasSuffix predicate on the "status" field.
func StatusHasSuffix(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldHasSuffix(FieldStatus, v))
}

// StatusEqualFold applies the EqualFold predicate on the "status" field.
func StatusEqualFold(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldEqualFold(FieldStatus, v))
}

// StatusContainsFold applies the ContainsFold predicate on the "status" field.
func StatusContainsFold(v string) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldContainsFold(FieldStatus, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldLTE(FieldUpdatedAt, v))
}

// DeletedAtEQ applies the EQ predicate on the "deleted_at" field.
func DeletedAtEQ(v time.Time) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldEQ(FieldDeletedAt, v))
}

// DeletedAtNEQ applies the NEQ predicate on the "deleted_at" field.
func DeletedAtNEQ(v time.Time) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldNEQ(FieldDeletedAt, v))
}

// DeletedAtIn applies the In predicate on the "deleted_at" field.
func DeletedAtIn(vs ...time.Time) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldIn(FieldDeletedAt, vs...))
}

// DeletedAtNotIn applies the NotIn predicate on the "deleted_at" field.
func DeletedAtNotIn(vs ...time.Time) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldNotIn(FieldDeletedAt, vs...))
}

// DeletedAtGT applies the GT predicate on the "deleted_at" field.
func DeletedAtGT(v time.Time) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldGT(FieldDeletedAt, v))
}

// DeletedAtGTE applies the GTE predicate on the "deleted_at" field.
func DeletedAtGTE(v time.Time) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldGTE(FieldDeletedAt, v))
}

// DeletedAtLT applies the LT predicate on the "deleted_at" field.
func DeletedAtLT(v time.Time) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldLT(FieldDeletedAt, v))
}

// DeletedAtLTE applies the LTE predicate on the "deleted_at" field.
func DeletedAtLTE(v time.Time) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldLTE(FieldDeletedAt, v))
}

// DeletedAtIsNil applies the IsNil predicate on the "deleted_at" field.
func DeletedAtIsNil() predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldIsNull(FieldDeletedAt))
}

// DeletedAtNotNil applies the NotNil predicate on the "deleted_at" field.
func DeletedAtNotNil() predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.FieldNotNull(FieldDeletedAt))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.MatchesGateway) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.MatchesGateway) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.MatchesGateway) predicate.MatchesGateway {
	return predicate.MatchesGateway(sql.NotPredicates(p))
}
