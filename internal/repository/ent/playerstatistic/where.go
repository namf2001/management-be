// Code generated by ent, DO NOT EDIT.

package playerstatistic

import (
	"management-be/internal/repository/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldLTE(FieldID, id))
}

// PlayerID applies equality check predicate on the "player_id" field. It's identical to PlayerIDEQ.
func PlayerID(v int) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldEQ(FieldPlayerID, v))
}

// TotalMatches applies equality check predicate on the "total_matches" field. It's identical to TotalMatchesEQ.
func TotalMatches(v int32) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldEQ(FieldTotalMatches, v))
}

// TotalMinutesPlayed applies equality check predicate on the "total_minutes_played" field. It's identical to TotalMinutesPlayedEQ.
func TotalMinutesPlayed(v int32) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldEQ(FieldTotalMinutesPlayed, v))
}

// TotalGoals applies equality check predicate on the "total_goals" field. It's identical to TotalGoalsEQ.
func TotalGoals(v int32) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldEQ(FieldTotalGoals, v))
}

// TotalAssists applies equality check predicate on the "total_assists" field. It's identical to TotalAssistsEQ.
func TotalAssists(v int32) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldEQ(FieldTotalAssists, v))
}

// TotalYellowCards applies equality check predicate on the "total_yellow_cards" field. It's identical to TotalYellowCardsEQ.
func TotalYellowCards(v int32) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldEQ(FieldTotalYellowCards, v))
}

// TotalRedCards applies equality check predicate on the "total_red_cards" field. It's identical to TotalRedCardsEQ.
func TotalRedCards(v int32) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldEQ(FieldTotalRedCards, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldEQ(FieldUpdatedAt, v))
}

// PlayerIDEQ applies the EQ predicate on the "player_id" field.
func PlayerIDEQ(v int) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldEQ(FieldPlayerID, v))
}

// PlayerIDNEQ applies the NEQ predicate on the "player_id" field.
func PlayerIDNEQ(v int) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldNEQ(FieldPlayerID, v))
}

// PlayerIDIn applies the In predicate on the "player_id" field.
func PlayerIDIn(vs ...int) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldIn(FieldPlayerID, vs...))
}

// PlayerIDNotIn applies the NotIn predicate on the "player_id" field.
func PlayerIDNotIn(vs ...int) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldNotIn(FieldPlayerID, vs...))
}

// PlayerIDIsNil applies the IsNil predicate on the "player_id" field.
func PlayerIDIsNil() predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldIsNull(FieldPlayerID))
}

// PlayerIDNotNil applies the NotNil predicate on the "player_id" field.
func PlayerIDNotNil() predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldNotNull(FieldPlayerID))
}

// TotalMatchesEQ applies the EQ predicate on the "total_matches" field.
func TotalMatchesEQ(v int32) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldEQ(FieldTotalMatches, v))
}

// TotalMatchesNEQ applies the NEQ predicate on the "total_matches" field.
func TotalMatchesNEQ(v int32) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldNEQ(FieldTotalMatches, v))
}

// TotalMatchesIn applies the In predicate on the "total_matches" field.
func TotalMatchesIn(vs ...int32) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldIn(FieldTotalMatches, vs...))
}

// TotalMatchesNotIn applies the NotIn predicate on the "total_matches" field.
func TotalMatchesNotIn(vs ...int32) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldNotIn(FieldTotalMatches, vs...))
}

// TotalMatchesGT applies the GT predicate on the "total_matches" field.
func TotalMatchesGT(v int32) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldGT(FieldTotalMatches, v))
}

// TotalMatchesGTE applies the GTE predicate on the "total_matches" field.
func TotalMatchesGTE(v int32) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldGTE(FieldTotalMatches, v))
}

// TotalMatchesLT applies the LT predicate on the "total_matches" field.
func TotalMatchesLT(v int32) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldLT(FieldTotalMatches, v))
}

// TotalMatchesLTE applies the LTE predicate on the "total_matches" field.
func TotalMatchesLTE(v int32) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldLTE(FieldTotalMatches, v))
}

// TotalMatchesIsNil applies the IsNil predicate on the "total_matches" field.
func TotalMatchesIsNil() predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldIsNull(FieldTotalMatches))
}

// TotalMatchesNotNil applies the NotNil predicate on the "total_matches" field.
func TotalMatchesNotNil() predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldNotNull(FieldTotalMatches))
}

// TotalMinutesPlayedEQ applies the EQ predicate on the "total_minutes_played" field.
func TotalMinutesPlayedEQ(v int32) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldEQ(FieldTotalMinutesPlayed, v))
}

// TotalMinutesPlayedNEQ applies the NEQ predicate on the "total_minutes_played" field.
func TotalMinutesPlayedNEQ(v int32) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldNEQ(FieldTotalMinutesPlayed, v))
}

// TotalMinutesPlayedIn applies the In predicate on the "total_minutes_played" field.
func TotalMinutesPlayedIn(vs ...int32) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldIn(FieldTotalMinutesPlayed, vs...))
}

// TotalMinutesPlayedNotIn applies the NotIn predicate on the "total_minutes_played" field.
func TotalMinutesPlayedNotIn(vs ...int32) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldNotIn(FieldTotalMinutesPlayed, vs...))
}

// TotalMinutesPlayedGT applies the GT predicate on the "total_minutes_played" field.
func TotalMinutesPlayedGT(v int32) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldGT(FieldTotalMinutesPlayed, v))
}

// TotalMinutesPlayedGTE applies the GTE predicate on the "total_minutes_played" field.
func TotalMinutesPlayedGTE(v int32) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldGTE(FieldTotalMinutesPlayed, v))
}

// TotalMinutesPlayedLT applies the LT predicate on the "total_minutes_played" field.
func TotalMinutesPlayedLT(v int32) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldLT(FieldTotalMinutesPlayed, v))
}

// TotalMinutesPlayedLTE applies the LTE predicate on the "total_minutes_played" field.
func TotalMinutesPlayedLTE(v int32) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldLTE(FieldTotalMinutesPlayed, v))
}

// TotalMinutesPlayedIsNil applies the IsNil predicate on the "total_minutes_played" field.
func TotalMinutesPlayedIsNil() predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldIsNull(FieldTotalMinutesPlayed))
}

// TotalMinutesPlayedNotNil applies the NotNil predicate on the "total_minutes_played" field.
func TotalMinutesPlayedNotNil() predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldNotNull(FieldTotalMinutesPlayed))
}

// TotalGoalsEQ applies the EQ predicate on the "total_goals" field.
func TotalGoalsEQ(v int32) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldEQ(FieldTotalGoals, v))
}

// TotalGoalsNEQ applies the NEQ predicate on the "total_goals" field.
func TotalGoalsNEQ(v int32) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldNEQ(FieldTotalGoals, v))
}

// TotalGoalsIn applies the In predicate on the "total_goals" field.
func TotalGoalsIn(vs ...int32) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldIn(FieldTotalGoals, vs...))
}

// TotalGoalsNotIn applies the NotIn predicate on the "total_goals" field.
func TotalGoalsNotIn(vs ...int32) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldNotIn(FieldTotalGoals, vs...))
}

// TotalGoalsGT applies the GT predicate on the "total_goals" field.
func TotalGoalsGT(v int32) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldGT(FieldTotalGoals, v))
}

// TotalGoalsGTE applies the GTE predicate on the "total_goals" field.
func TotalGoalsGTE(v int32) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldGTE(FieldTotalGoals, v))
}

// TotalGoalsLT applies the LT predicate on the "total_goals" field.
func TotalGoalsLT(v int32) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldLT(FieldTotalGoals, v))
}

// TotalGoalsLTE applies the LTE predicate on the "total_goals" field.
func TotalGoalsLTE(v int32) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldLTE(FieldTotalGoals, v))
}

// TotalGoalsIsNil applies the IsNil predicate on the "total_goals" field.
func TotalGoalsIsNil() predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldIsNull(FieldTotalGoals))
}

// TotalGoalsNotNil applies the NotNil predicate on the "total_goals" field.
func TotalGoalsNotNil() predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldNotNull(FieldTotalGoals))
}

// TotalAssistsEQ applies the EQ predicate on the "total_assists" field.
func TotalAssistsEQ(v int32) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldEQ(FieldTotalAssists, v))
}

// TotalAssistsNEQ applies the NEQ predicate on the "total_assists" field.
func TotalAssistsNEQ(v int32) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldNEQ(FieldTotalAssists, v))
}

// TotalAssistsIn applies the In predicate on the "total_assists" field.
func TotalAssistsIn(vs ...int32) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldIn(FieldTotalAssists, vs...))
}

// TotalAssistsNotIn applies the NotIn predicate on the "total_assists" field.
func TotalAssistsNotIn(vs ...int32) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldNotIn(FieldTotalAssists, vs...))
}

// TotalAssistsGT applies the GT predicate on the "total_assists" field.
func TotalAssistsGT(v int32) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldGT(FieldTotalAssists, v))
}

// TotalAssistsGTE applies the GTE predicate on the "total_assists" field.
func TotalAssistsGTE(v int32) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldGTE(FieldTotalAssists, v))
}

// TotalAssistsLT applies the LT predicate on the "total_assists" field.
func TotalAssistsLT(v int32) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldLT(FieldTotalAssists, v))
}

// TotalAssistsLTE applies the LTE predicate on the "total_assists" field.
func TotalAssistsLTE(v int32) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldLTE(FieldTotalAssists, v))
}

// TotalAssistsIsNil applies the IsNil predicate on the "total_assists" field.
func TotalAssistsIsNil() predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldIsNull(FieldTotalAssists))
}

// TotalAssistsNotNil applies the NotNil predicate on the "total_assists" field.
func TotalAssistsNotNil() predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldNotNull(FieldTotalAssists))
}

// TotalYellowCardsEQ applies the EQ predicate on the "total_yellow_cards" field.
func TotalYellowCardsEQ(v int32) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldEQ(FieldTotalYellowCards, v))
}

// TotalYellowCardsNEQ applies the NEQ predicate on the "total_yellow_cards" field.
func TotalYellowCardsNEQ(v int32) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldNEQ(FieldTotalYellowCards, v))
}

// TotalYellowCardsIn applies the In predicate on the "total_yellow_cards" field.
func TotalYellowCardsIn(vs ...int32) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldIn(FieldTotalYellowCards, vs...))
}

// TotalYellowCardsNotIn applies the NotIn predicate on the "total_yellow_cards" field.
func TotalYellowCardsNotIn(vs ...int32) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldNotIn(FieldTotalYellowCards, vs...))
}

// TotalYellowCardsGT applies the GT predicate on the "total_yellow_cards" field.
func TotalYellowCardsGT(v int32) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldGT(FieldTotalYellowCards, v))
}

// TotalYellowCardsGTE applies the GTE predicate on the "total_yellow_cards" field.
func TotalYellowCardsGTE(v int32) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldGTE(FieldTotalYellowCards, v))
}

// TotalYellowCardsLT applies the LT predicate on the "total_yellow_cards" field.
func TotalYellowCardsLT(v int32) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldLT(FieldTotalYellowCards, v))
}

// TotalYellowCardsLTE applies the LTE predicate on the "total_yellow_cards" field.
func TotalYellowCardsLTE(v int32) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldLTE(FieldTotalYellowCards, v))
}

// TotalYellowCardsIsNil applies the IsNil predicate on the "total_yellow_cards" field.
func TotalYellowCardsIsNil() predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldIsNull(FieldTotalYellowCards))
}

// TotalYellowCardsNotNil applies the NotNil predicate on the "total_yellow_cards" field.
func TotalYellowCardsNotNil() predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldNotNull(FieldTotalYellowCards))
}

// TotalRedCardsEQ applies the EQ predicate on the "total_red_cards" field.
func TotalRedCardsEQ(v int32) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldEQ(FieldTotalRedCards, v))
}

// TotalRedCardsNEQ applies the NEQ predicate on the "total_red_cards" field.
func TotalRedCardsNEQ(v int32) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldNEQ(FieldTotalRedCards, v))
}

// TotalRedCardsIn applies the In predicate on the "total_red_cards" field.
func TotalRedCardsIn(vs ...int32) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldIn(FieldTotalRedCards, vs...))
}

// TotalRedCardsNotIn applies the NotIn predicate on the "total_red_cards" field.
func TotalRedCardsNotIn(vs ...int32) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldNotIn(FieldTotalRedCards, vs...))
}

// TotalRedCardsGT applies the GT predicate on the "total_red_cards" field.
func TotalRedCardsGT(v int32) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldGT(FieldTotalRedCards, v))
}

// TotalRedCardsGTE applies the GTE predicate on the "total_red_cards" field.
func TotalRedCardsGTE(v int32) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldGTE(FieldTotalRedCards, v))
}

// TotalRedCardsLT applies the LT predicate on the "total_red_cards" field.
func TotalRedCardsLT(v int32) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldLT(FieldTotalRedCards, v))
}

// TotalRedCardsLTE applies the LTE predicate on the "total_red_cards" field.
func TotalRedCardsLTE(v int32) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldLTE(FieldTotalRedCards, v))
}

// TotalRedCardsIsNil applies the IsNil predicate on the "total_red_cards" field.
func TotalRedCardsIsNil() predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldIsNull(FieldTotalRedCards))
}

// TotalRedCardsNotNil applies the NotNil predicate on the "total_red_cards" field.
func TotalRedCardsNotNil() predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldNotNull(FieldTotalRedCards))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldLTE(FieldCreatedAt, v))
}

// CreatedAtIsNil applies the IsNil predicate on the "created_at" field.
func CreatedAtIsNil() predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldIsNull(FieldCreatedAt))
}

// CreatedAtNotNil applies the NotNil predicate on the "created_at" field.
func CreatedAtNotNil() predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldNotNull(FieldCreatedAt))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldLTE(FieldUpdatedAt, v))
}

// UpdatedAtIsNil applies the IsNil predicate on the "updated_at" field.
func UpdatedAtIsNil() predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldIsNull(FieldUpdatedAt))
}

// UpdatedAtNotNil applies the NotNil predicate on the "updated_at" field.
func UpdatedAtNotNil() predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.FieldNotNull(FieldUpdatedAt))
}

// HasPlayer applies the HasEdge predicate on the "player" edge.
func HasPlayer() predicate.PlayerStatistic {
	return predicate.PlayerStatistic(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2O, true, PlayerTable, PlayerColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasPlayerWith applies the HasEdge predicate on the "player" edge with a given conditions (other predicates).
func HasPlayerWith(preds ...predicate.Player) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(func(s *sql.Selector) {
		step := newPlayerStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.PlayerStatistic) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.PlayerStatistic) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.PlayerStatistic) predicate.PlayerStatistic {
	return predicate.PlayerStatistic(sql.NotPredicates(p))
}
